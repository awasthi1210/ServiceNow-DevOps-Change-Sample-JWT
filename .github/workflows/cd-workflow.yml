# This workflow uses ServiceNow custom actions that are certified by ServiceNow.
name: CD GitHub workflow

# on: workflow_dispatch
on:
  workflow_run:
    workflows: [ "CI GitHub workflow" ]
    types: [completed]

jobs:
  registerPackage:
    name: 'Register Package'
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Package
    # You may pin to the exact commit or the version.           
      uses: ServiceNow/servicenow-devops-register-package@v3.1.0
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id of the tool created in ServiceNow
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # List of Artifacts in JSON format
          artifacts: '[
              {
                  "name": "app-devops-ci.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'
          # Name of the Package that contains list of artifacts
          package-name: 'app-devops-change-velocity.war'
          # Display Name of Job
          job-name: 'Register Package'

  change:
    # jobs that must complete successfully before this job will run
    needs: registerPackage
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    steps:
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v4.1.0
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change'
          change-request: '{
          "attributes":{"requested_by":{"name": "DevOps System"},
          "assignment_group":{"name": "Change management"},
          "priority": "2",
          "comments": "This is a sample pipeline script to be added in your change step It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of de Finibus Bonorum et Malorum (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, Lorem ipsum dolor sit amet.., comes from a line in section 1.10.32.",
          "work_notes": "Update this to work_notes",
          "start_date": "",
          "end_date": ""}
          }'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: Enter the planned start date
          # end_date: Enter the planned end date

 getchange:
    # jobs that  must complete successfully before this job will run
    needs: change
    # type of machine to run the job on
    runs-on: ubuntu-latest
    if: always()
    name: 'ServiceNow DevOps Get Change'
    outputs:
      change-request-number: ${{ steps.get_change.outputs.change-request-number }}
    steps:
      - name: ServiceNow DevOps Get Change
        # You may pin to the exact commit or the version.
        # uses: ServiceNow/servicenow-devops-get-change@0f8b1914adeaec764a4286bdd9cba73ed1c6097f
        uses: ServiceNow/servicenow-devops-get-change@v4.1.0
        id: get_change
        with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Devops Integration Token
          # devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          devops-integration-user-name: '${{ secrets.SN_DEVOPS_USER }}'
          devops-integration-user-password: '${{ secrets.SN_DEVOPS_PASSWORD }}'
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # The inputs to identify change at Servicenow and GET it.
          change-details: '{"build_number":"","pipeline_name":"","stage_name":"ServiceNow DevOps Change"}'

      - name: Output of ServiceNow DevOps Get Change
        run: echo 'Output of ServiceNow DevOps Get Change is -> change-request-number = ${{ steps.get_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT

  updatechange:
    # jobs that must complete successfully before this job will run
    needs: getchange
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Update Change'
    if: always()
    steps:
      - name: ServiceNow DevOps Update Change
        # You may pin to the exact commit or the version.
        # uses: ServiceNow/servicenow-devops-update-change@66d51cb13684d8287a763bc3f4dc4531c6ab3306
        uses: ServiceNow/servicenow-devops-update-change@v3.1.0
        id: update_change
        with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # ServiceNow Devops security token
          # devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          devops-integration-user-name: '${{ secrets.SN_DEVOPS_USER }}'
          devops-integration-user-password: '${{ secrets.SN_DEVOPS_PASSWORD }}'
          # Orchestration Tool Id of the tool created in ServiceNow
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # Change Request Number to be Updated
          change-request-number: ${{needs.getchange.outputs.change-request-number}}
          # The customized inputs to create change with the requested details.
          change-request-details: '{"state":"3","close_code":"successful_issues","close_notes":"Test results successful"}'
          
